@page "/pokemon/{Name}"

<MudButton Color="Color.Info" StartIcon="@Icons.Material.Filled.ArrowBackIos" OnClick='()=>NavigationManager.NavigateTo("")'>Back</MudButton>
@if (pokemon != null)
{
    <PageTitle>@BasicUtility.Capitalize(pokemon.N) @BasicUtility.ConvertToHashCode(pokemon.Id)</PageTitle>
    <MudStack Justify="Justify.Center" Row="true">
        <MudText Typo="Typo.h3" GutterBottom="true" Color="Color.Primary">@BasicUtility.Capitalize(pokemon.N)</MudText>
        <MudText Typo="Typo.h3" GutterBottom="true" Color="Color.Secondary">@BasicUtility.ConvertToHashCode(pokemon.Id)</MudText>
    </MudStack>
    <MudGrid>
        <MudItem xs="12" sm="6" md="4">
            <MudImage Fluid="true" Src="@BasicUtility.PokemonImage(pokemon.Id)" Alt="@pokemon.N" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudText Typo="Typo.h6" Color="Color.Info">Stats</MudText>
            @for (var s = 0; s < pokemon.Sts.Count; s++)
            {
                var stat = pokemon.Sts[s];
                <MudStack Row="true">
                    <MudText Style="max-width:10px;white-space: nowrap;margin-right:93px" Typo="Typo.body1">@BasicUtility.Capitalize(@stat.N)</MudText>
                    <MudTooltip Text="@stat.V.ToString()">
                        <MudRating ReadOnly="true" SelectedValue="@BasicUtility.GetNumStars(stat.V)" MaxValue="10" />
                    </MudTooltip>
                </MudStack>
            }
            <MudText Typo="Typo.h6" Class="mt-2">Type</MudText>
            @for (var j = 0; j < pokemon.Ts.Count; j++)
            {
                var type = pokemon.Ts[j];
                <MudChip Class="@BasicUtility.GetChipClass(type)">@type</MudChip>
            }
            <MudText Typo="Typo.h6" Color="Color.Tertiary" Class="mt-2">Strong Against</MudText>
            @for (var j = 0; j < pokemon.Sgs.Count; j++)
            {
                var strong = pokemon.Sgs[j];
                <MudChip Class="@BasicUtility.GetChipClass(strong)">@strong</MudChip>
            }
            <MudText Typo="Typo.h6" Color="Color.Error" Class="mt-2">Vulnerable To</MudText>
            @for (var j = 0; j < pokemon.Wns.Count; j++)
            {
                var weakness = pokemon.Wns[j];
                <MudChip Class="@BasicUtility.GetChipClass(weakness)">@weakness</MudChip>
            }

        </MudItem>
    </MudGrid>
}
@code {
    [Parameter]
    public string Name { get; set; } = string.Empty;
    private string _pokemonListKey = "PokemonList";
    public PokemonLite? pokemon;
    protected override void OnInitialized()
    {
        pokemon = PokemonTransferService.Data;
        if (pokemon == null || !pokemon.N.Equals(Name))
        {
            pokemon = PokemonTransferService.List.FirstOrDefault(p => p.N.Equals(Name));
            if (pokemon == null)
            {
                NavigationManager.NavigateTo("");
            }
        }
        //if (await localStorage.ContainKeyAsync(_pokemonListKey))
        //{
            //var _ = await localStorage.GetItemAsync<List<PokemonLite>>(_pokemonListKey);
            //var compress = await localStorage.GetItemAsStringAsync(_pokemonListKey);
            //var json = BasicUtility.DecompressStringDeflate(compress);
            //var _ = JsonConvert.DeserializeObject<List<PokemonLite>>(json);
            
        //}
    }
}
